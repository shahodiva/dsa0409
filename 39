# prompt:  Scenario: You work as a data scientist for a marketing agency, and one of your clients is a 
# large e-commerce company. The company wants to understand the purchasing behavior of its 
# customers and segment them into different groups based on their buying patterns. The e-commerce 
# company has provided you with transaction data, including customer IDs, the total amount spent in 
# each transaction, and the number of items purchased. 
# Question: Build a clustering model using the K-Means algorithm to group customers based on their 
# spending and purchase behavior and visualize the clusters using scatter plots or other appropriate 
# visualizations to gain insights into customer distribution and distinguish different segments. 

import matplotlib.pyplot as plt
import pandas as pd

# Create a sample dataset (replace with your actual transaction data)
data = {'CustomerID': [1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5],
        'AmountSpent': [50, 100, 20, 30, 40, 200, 150, 10, 50, 30, 20, 70, 80],
        'NumItems': [2, 5, 1, 2, 3, 10, 7, 1, 3, 2, 1, 4, 5]}
df = pd.DataFrame(data)

# Aggregate data by CustomerID to get total spending and number of items
customer_df = df.groupby('CustomerID').agg(
    TotalAmountSpent=('AmountSpent', 'sum'),
    TotalNumItems=('NumItems', 'sum')
).reset_index()

# Select features for clustering
X_cluster = customer_df[['TotalAmountSpent', 'TotalNumItems']]

# Determine the optimal number of clusters (you can use the Elbow method or Silhouette score)
# For this example, let's assume we choose 3 clusters.
n_clusters = 3

# Train the K-Means model
kmeans = KMeans(n_clusters=n_clusters, random_state=42, n_init=10)
kmeans.fit(X_cluster)

# Add the cluster labels to the customer dataframe
customer_df['Cluster'] = kmeans.labels_

# Visualize the clusters
plt.figure(figsize=(8, 6))
for cluster in range(n_clusters):
    cluster_data = customer_df[customer_df['Cluster'] == cluster]
    plt.scatter(cluster_data['TotalAmountSpent'], cluster_data['TotalNumItems'], label=f'Cluster {cluster}')

plt.xlabel('Total Amount Spent')
plt.ylabel('Total Number of Items Purchased')
plt.title('Customer Segmentation using K-Means Clustering')
plt.legend()
plt.grid(True)
plt.show()

# Display the customer dataframe with assigned clusters
customer_df
