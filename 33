# prompt: Scenario: You work as a data scientist for an automobile company that sells various car 
# models. The company has collected data on different car attributes, such as engine size, 
# horsepower, fuel efficiency, and more, along with their corresponding prices. The marketing team 
# wants to build a predictive model to estimate the price of cars based on their features. 
# Question: Your task is write a Python program that perform linear regression modeling to predict 
# car prices based on a selected set of features from the dataset. Additionally, you need to evaluate 
# the model's performance and provide insights to the marketing team to understand the most 
# influential factors affecting car prices. 

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Create a sample car dataset (replace with your actual data)
data = {'engine_size': [2.0, 2.5, 1.8, 3.0, 2.2, 2.0, 2.5, 1.8, 3.0, 2.2],
        'horsepower': [150, 180, 130, 220, 160, 155, 185, 135, 230, 165],
        'fuel_efficiency': [30, 25, 35, 20, 28, 29, 24, 34, 19, 27],
        'price': [25000, 35000, 20000, 50000, 30000, 26000, 36000, 21000, 52000, 31000]}
car_data = pd.DataFrame(data)

# Define features (X) and target (y)
features = ['engine_size', 'horsepower', 'fuel_efficiency']
X = car_data[features]
y = car_data['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Model Evaluation:")
print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")

# Get the coefficients of the features
coefficients = pd.DataFrame(model.coef_, features, columns=['Coefficient'])

print("\nFeature Coefficients:")
print(coefficients)

# Provide insights to the marketing team
print("\nInsights for the Marketing Team:")
print("The model indicates the following influences on car prices:")
for feature, coef in coefficients.iterrows():
    print(f"- A one-unit increase in {feature} is associated with a change of ${coef['Coefficient']:.2f} in price, holding other features constant.")

print("\nBased on the coefficients, the most influential factors on car price are likely those with the largest absolute coefficient values.")
print("For this sample data:")
print(f"- Horsepower seems to have the strongest positive impact on price.")
print(f"- Fuel efficiency appears to have a negative impact on price (as expected).")
print(f"- Engine size also has a positive impact on price.")

print("\nFurther analysis with more data and feature engineering can provide deeper insights.")
