# prompt:  Scenario: You are a data analyst working for a sports analytics company. The company has 
# collected data on various soccer players, including their names, ages, positions, number of goals 
# scored, and weekly salaries. Create dataset on your own and store in a CSV file. 
# Question: Develop a Python program to read the data from the CSV file into a pandas data frame, 
# to find the top 5 players with the highest number of goals scored and the top 5 players with the 
# highest salaries. Also calculate the average age of players and display the names of players who are 
# above the average age and visualize the distribution of players based on their positions using a bar 
# chart.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import csv

# Create the dataset and store in a CSV file
data = {
    'Name': ['Player A', 'Player B', 'Player C', 'Player D', 'Player E', 'Player F', 'Player G', 'Player H', 'Player I', 'Player J'],
    'Age': [25, 28, 22, 30, 24, 26, 29, 23, 31, 27],
    'Position': ['Forward', 'Midfielder', 'Defender', 'Forward', 'Midfielder', 'Defender', 'Forward', 'Midfielder', 'Defender', 'Forward'],
    'Goals Scored': [20, 10, 2, 25, 8, 3, 18, 12, 1, 15],
    'Weekly Salary': [50000, 40000, 20000, 60000, 35000, 18000, 48000, 42000, 15000, 55000]
}

df_data = pd.DataFrame(data)
df_data.to_csv('soccer_players.csv', index=False)

# Read the data from the CSV file into a pandas DataFrame
df = pd.read_csv('soccer_players.csv')

# Find the top 5 players with the highest number of goals scored
top_goals = df.sort_values(by='Goals Scored', ascending=False).head(5)
print("Top 5 players with the highest goals scored:")
print(top_goals[['Name', 'Goals Scored']])

# Find the top 5 players with the highest salaries
top_salaries = df.sort_values(by='Weekly Salary', ascending=False).head(5)
print("\nTop 5 players with the highest salaries:")
print(top_salaries[['Name', 'Weekly Salary']])

# Calculate the average age of players
average_age = df['Age'].mean()
print(f"\nAverage age of players: {average_age:.2f}")

# Display the names of players who are above the average age
players_above_average_age = df[df['Age'] > average_age]
print("\nPlayers above the average age:")
print(players_above_average_age['Name'].tolist())

# Visualize the distribution of players based on their positions using a bar chart
position_counts = df['Position'].value_counts()

plt.figure(figsize=(8, 6))
position_counts.plot(kind='bar', color=['skyblue', 'lightgreen', 'salmon'])
plt.title('Distribution of Players by Position')
plt.xlabel('Position')
plt.ylabel('Number of Players')
plt.xticks(rotation=0)
plt.grid(axis='y', linestyle='--')
plt.show()
